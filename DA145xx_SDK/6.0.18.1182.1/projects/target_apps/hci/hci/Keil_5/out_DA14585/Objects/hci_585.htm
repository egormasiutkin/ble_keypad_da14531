<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out_DA14585\Objects\hci_585.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out_DA14585\Objects\hci_585.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6210000: Last Updated: Wed Apr 24 19:51:59 2024
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
PK_PointMult_func
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">BLE_RF_DIAG_Handler</a><BR>
 <LI><a href="#[122]">adc_usDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[122]">adc_usDelay</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_Handler</a> from lto-llvm-bffcfd.o(.text.ADC_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[6]">BLE_WAKEUP_LP_Handler</a> from lto-llvm-bffcfd.o(.text.BLE_WAKEUP_LP_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[b3]">DCoffsetCalibration_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[1a]">DMA_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[10]">GPIO0_Handler</a> from lto-llvm-bffcfd.o(.text.GPIO0_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[11]">GPIO1_Handler</a> from lto-llvm-bffcfd.o(.text.GPIO1_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[12]">GPIO2_Handler</a> from lto-llvm-bffcfd.o(.text.GPIO2_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[13]">GPIO3_Handler</a> from lto-llvm-bffcfd.o(.text.GPIO3_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[14]">GPIO4_Handler</a> from lto-llvm-bffcfd.o(.text.GPIO4_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[24]">GPIO_ConfigurePin</a> from lto-llvm-bffcfd.o(.text.GPIO_ConfigurePin) referenced from lto-llvm-bffcfd.o(.text.periph_init)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[22]">HardFault_HandlerC</a> from lto-llvm-bffcfd.o(.text.HardFault_HandlerC) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[a]">I2C_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[a0]">JT_l2cc_pdu_recv_ind_handler_func</a> from patch.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[9d]">JT_l2cc_pdu_unpack_func</a> from patch.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[aa]">JT_llc_le_length_effective_func</a> from patch.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[a7]">JT_llm_p256_start_func</a> from smpc_util.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[d]">KEYBRD_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[21]">NMI_HandlerC</a> from lto-llvm-bffcfd.o(.text.NMI_HandlerC) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[33]">PATCHED_atts_mtu_exc_req</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[3c]">PATCHED_gapm_adv_sanity</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[38]">PATCHED_gapm_get_ad_type_flag</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[30]">PATCHED_gapm_reset_cmd_handler</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[2e]">PATCHED_hci_acl_data_rx_handler</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[31]">PATCHED_hci_command_handler</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[3d]">PATCHED_llc_ch_map_req_ind</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[32]">PATCHED_llc_data_ind_handler</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[39]">PATCHED_llc_util_gen_skdx</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[2d]">PATCHED_llcp_length_req_handler</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[2f]">PATCHED_llcp_length_rsp_handler</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[3a]">PATCHED_lld_evt_move_to_master</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[3b]">PATCHED_llm_adv_report_set</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[3e]">PATCHED_llm_con_req_ind</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[36]">PATCHED_smpc_check_key_distrib</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[37]">PATCHED_smpc_construct_id_addr_info_pdu</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[34]">PATCHED_smpc_dhkey_calc_start</a> from smpc_util.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[35]">PATCHED_smpc_is_sec_mode_reached</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[3f]">PATCHED_smpc_recv_pair_rand_pdu</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[40]">PATCHED_smpc_recv_public_key_exchange_pdu</a> from patch.o(.text) referenced from patch.o(.constdata)
 <LI><a href="#[17]">PCM_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[a6]">PK_PointMult_func</a> from patch.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[b4]">PllLF_IFF_MIX_CapCalibration_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[29]">RADIOCNTL_Handler</a> from lto-llvm-bffcfd.o(.text.RADIOCNTL_Handler) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[1b]">RESERVED21_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1c]">RESERVED22_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1d]">RESERVED23_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[f]">RFCAL_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[b]">SPI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[18]">SRCIN_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[19]">SRCOUT_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[15]">SWTIM_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from lto-llvm-bffcfd.o(system_DA14xxx) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[9]">UART2_Handler</a> from lto-llvm-bffcfd.o(.text.UART2_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[8]">UART_Handler</a> from da14585_symbols.txt(ABSOLUTE) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[71]">UART_Handler_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[16]">WKUP_QUADEC_Handler</a> from lto-llvm-bffcfd.o(.text.WKUP_QUADEC_Handler) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[a3]">attc_l2cc_pdu_recv_handler_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[a2]">atts_l2cc_pdu_recv_handler_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[41]">atts_mtu_exc_req</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[b1]">ba431_get_rand_func</a> from lto-llvm-bffcfd.o(.text.ba431_get_rand_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[a4]">crypto_init_func</a> from lto-llvm-bffcfd.o(.text.crypto_init_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[99]">dbg_init_func</a> from dbg.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[9a]">dbg_platform_reset_complete_func</a> from dbg.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[af]">dia_rand_func</a> from lto-llvm-bffcfd.o(.text.dia_rand_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[b0]">dia_srand_func</a> from lto-llvm-bffcfd.o(.text.dia_srand_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[23]">dialog_commands_vs1_handler</a> from lto-llvm-bffcfd.o(.text.dialog_commands_vs1_handler) referenced from lto-llvm-bffcfd.o(.text.hci_vs_handle_rest_commands)
 <LI><a href="#[a1]">gapc_lecb_connect_cfm_handler_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[4a]">gapm_adv_sanity</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[46]">gapm_get_ad_type_flag</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[73]">gtl_eif_init_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[75]">gtl_eif_read_hdr_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[76]">gtl_eif_read_payl_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[74]">gtl_eif_read_start_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[78]">gtl_eif_rx_done_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[77]">gtl_eif_tx_done_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[72]">gtl_init_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[79]">h4tl_init_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[7e]">h4tl_out_of_sync_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[7b]">h4tl_read_hdr_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[7d]">h4tl_read_next_out_of_sync_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[7c]">h4tl_read_payl_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[7a]">h4tl_read_start_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[80]">h4tl_rx_done_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[7f]">h4tl_tx_done_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[68]">hci_command_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[51]">hci_dbg_del_par_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[53]">hci_dbg_er_flash_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[5c]">hci_dbg_hw_reg_rd_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[5d]">hci_dbg_hw_reg_wr_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[52]">hci_dbg_id_flash_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[60]">hci_dbg_llcp_discard_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[5b]">hci_dbg_plf_reset_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[55]">hci_dbg_rd_flash_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[58]">hci_dbg_rd_ke_stats_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[4f]">hci_dbg_rd_mem_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[64]">hci_dbg_rd_mem_info_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[56]">hci_dbg_rd_par_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[61]">hci_dbg_reset_rx_cnt_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[62]">hci_dbg_reset_tx_cnt_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[59]">hci_dbg_rf_reg_rd_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[5a]">hci_dbg_rf_reg_wr_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[5e]">hci_dbg_set_bd_addr_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[5f]">hci_dbg_set_crc_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[63]">hci_dbg_set_tx_pw_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[65]">hci_dbg_wr_dle_dft_value_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[67]">hci_dbg_wr_filt_dup_size_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[54]">hci_dbg_wr_flash_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[50]">hci_dbg_wr_mem_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[57]">hci_dbg_wr_par_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[66]">hci_dbg_wr_rl_size_cmd_handler</a> from dbg_task.o(.text) referenced from dbg_task.o(.constdata)
 <LI><a href="#[9b]">hci_rd_local_supp_feats_cmd_handler_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[81]">ke_task_init_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[82]">ke_timer_init_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[9f]">l2c_process_sdu_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[9e]">l2c_send_lecb_message_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[9c]">l2cc_pdu_pack_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[4b]">llc_ch_map_req_ind</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[ab]">llc_le_length_conn_init_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[ae]">llc_pdu_send_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[47]">llc_util_gen_skdx</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[ad]">lld_data_tx_check_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[ac]">lld_data_tx_prog_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[48]">lld_evt_move_to_master</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[8a]">lld_sleep_compensate_func</a> from lto-llvm-bffcfd.o(.text.lld_sleep_compensate_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[8b]">lld_sleep_init_func</a> from lto-llvm-bffcfd.o(.text.lld_sleep_init_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[8d]">lld_sleep_lpcycles_2_us_sel_func</a> from lto-llvm-bffcfd.o(.text.lld_sleep_lpcycles_2_us_sel_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[8c]">lld_sleep_us_2_lpcycles_sel_func</a> from lto-llvm-bffcfd.o(.text.lld_sleep_us_2_lpcycles_sel_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[90]">lld_test_mode_rx_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[8f]">lld_test_mode_tx_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[8e]">lld_test_stop_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[49]">llm_adv_report_set</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[4c]">llm_con_req_ind</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[a8]">llm_create_p256_key_func</a> from patch.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[83]">llm_encryption_done_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[a5]">llm_le_adv_report_ind_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[a9]">llm_p256_req_handler_func</a> from patch.o(.text) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[1e]">main</a> from lto-llvm-bffcfd.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[b2]">modulationGainCalibration_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[86]">nvds_del_func</a> from lto-llvm-bffcfd.o(.text.nvds_del_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[84]">nvds_get_func</a> from lto-llvm-bffcfd.o(.text.nvds_get_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[87]">nvds_init_func</a> from lto-llvm-bffcfd.o(.text.nvds_init_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[85]">nvds_put_func</a> from lto-llvm-bffcfd.o(.text.nvds_put_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[89]">platform_reset_func</a> from lto-llvm-bffcfd.o(.text.platform_reset_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[94]">prf_add_profile_func</a> from lto-llvm-bffcfd.o(.text.prf_add_profile_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[96]">prf_cleanup_func</a> from lto-llvm-bffcfd.o(.text.prf_cleanup_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[95]">prf_create_func</a> from lto-llvm-bffcfd.o(.text.prf_create_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[97]">prf_get_id_from_task_func</a> from lto-llvm-bffcfd.o(.text.prf_get_id_from_task_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[98]">prf_get_task_from_id_func</a> from lto-llvm-bffcfd.o(.text.prf_get_task_from_id_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[93]">prf_init_func</a> from lto-llvm-bffcfd.o(.text.prf_init_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[2c]">rf_force_agc_enable</a> from lto-llvm-bffcfd.o(.text.rf_force_agc_enable) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[69]">rf_init_func</a> from lto-llvm-bffcfd.o(.text.rf_init_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[26]">rf_reg_rd</a> from lto-llvm-bffcfd.o(.text.rf_reg_rd) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[25]">rf_reg_wr</a> from lto-llvm-bffcfd.o(.text.rf_reg_wr) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[6a]">rf_reinit_func</a> from lto-llvm-bffcfd.o(.text.rf_reinit_func) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[2a]">rf_reset</a> from lto-llvm-bffcfd.o(.text.rf_reset) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[2b]">rf_rssi_convert</a> from lto-llvm-bffcfd.o(.text.rf_rssi_convert) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[27]">rf_sleep</a> from lto-llvm-bffcfd.o(.text.rf_sleep) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[28]">rf_txpwr_dbm_get</a> from lto-llvm-bffcfd.o(.text.rf_txpwr_dbm_get) referenced from lto-llvm-bffcfd.o(.text.rf_init_func)
 <LI><a href="#[7]">rwble_isr</a> from lto-llvm-bffcfd.o(.text.rwble_isr) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[88]">rwip_eif_get_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[44]">smpc_check_key_distrib</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[91]">smpc_check_param_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[45]">smpc_construct_id_addr_info_pdu</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[b6]">smpc_dhkey_calc_ind_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[42]">smpc_dhkey_calc_start</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[43]">smpc_is_sec_mode_reached</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[92]">smpc_pdu_recv_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[b5]">smpc_public_key_exchange_start_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[4d]">smpc_recv_pair_rand_pdu</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[4e]">smpc_recv_public_key_exchange_pdu</a> from da14585_symbols.txt(ABSOLUTE) referenced from patch.o(.constdata)
 <LI><a href="#[b7]">smpm_ecdh_key_create_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[6e]">uart_finish_transfers_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[6d]">uart_flow_off_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[6c]">uart_flow_on_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[6b]">uart_init_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[6f]">uart_read_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[70]">uart_write_func</a> from da14585_symbols.txt(ABSOLUTE) referenced from lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
 <LI><a href="#[b8]">user_commands_vs1_handler</a> from lto-llvm-bffcfd.o(.text.user_commands_vs1_handler) referenced from lto-llvm-bffcfd.o(.rodata.user_commands_handler_tab)
 <LI><a href="#[b9]">user_commands_vs2_handler</a> from lto-llvm-bffcfd.o(.text.user_commands_vs2_handler) referenced from lto-llvm-bffcfd.o(.rodata.user_commands_handler_tab)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[88]"></a>rwip_eif_get_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[12c]"></a>ble_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[139]"></a>ble_regs_push</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>ble_regs_pop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_WAKEUP_LP_Handler
</UL>

<P><STRONG><a name="[144]"></a>rf_reinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[f1]"></a>smpc_pdu_recv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_recv_ind_handler_func
</UL>

<P><STRONG><a name="[8]"></a>UART_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[13a]"></a>uart_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[135]"></a>gtl_eif_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[137]"></a>h4tl_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>rwip_eif_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>platform_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_plf_reset_cmd_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[e9]"></a>l2cc_pdu_unpack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[ed]"></a>l2c_send_lecb_message</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[eb]"></a>l2c_process_sdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[d6]"></a>PK_PointMult</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_create_p256_key_func
</UL>

<P><STRONG><a name="[de]"></a>llm_p256_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
</UL>

<P><STRONG><a name="[d9]"></a>llm_create_p256_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
</UL>

<P><STRONG><a name="[c8]"></a>dia_rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ba431_get_rand_func
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_util_gen_skdx
</UL>

<P><STRONG><a name="[12b]"></a>dia_srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>ba431_get_rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_create_p256_key_func
</UL>

<P><STRONG><a name="[112]"></a>modulationGainCalibration</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_585
</UL>

<P><STRONG><a name="[110]"></a>DCoffsetCalibration</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_585
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[111]"></a>PllLF_IFF_MIX_CapCalibration</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_585
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>smpm_ecdh_key_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[ee]"></a>co_buf_rx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[ca]"></a>co_buf_rx_buffer_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_adv_report_set
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[dc]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
</UL>

<P><STRONG><a name="[ea]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[ab]"></a>llc_le_length_conn_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[10a]"></a>llc_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[fe]"></a>llc_common_enc_key_ref_comp_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[ff]"></a>llc_common_enc_change_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[f4]"></a>llc_map_update_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_ch_map_req_ind
</UL>

<P><STRONG><a name="[ae]"></a>llc_pdu_send_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[c2]"></a>llc_length_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
</UL>

<P><STRONG><a name="[c3]"></a>llc_length_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
</UL>

<P><STRONG><a name="[4b]"></a>llc_ch_map_req_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>llc_util_get_free_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[c1]"></a>llc_util_dicon_procedure</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[47]"></a>llc_util_gen_skdx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>llc_util_update_channel_map</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[119]"></a>llc_util_set_llcp_discard_enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_llcp_discard_cmd_handler
</UL>

<P><STRONG><a name="[fd]"></a>lld_get_mode</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[109]"></a>lld_move_to_slave</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[f3]"></a>lld_ch_map_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_ch_map_req_ind
</UL>

<P><STRONG><a name="[141]"></a>lld_crypt_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[8f]"></a>lld_test_mode_tx_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[90]"></a>lld_test_mode_rx_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[8e]"></a>lld_test_stop_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[ad]"></a>lld_data_tx_check_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[ac]"></a>lld_data_tx_prog_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[cc]"></a>lld_evt_elt_delete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_evt_move_to_master
</UL>

<P><STRONG><a name="[cf]"></a>lld_evt_channel_next</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_evt_move_to_master
</UL>

<P><STRONG><a name="[11a]"></a>lld_evt_conhdl2elt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_tx_pw_cmd_handler
</UL>

<P><STRONG><a name="[f2]"></a>lld_evt_schedule_next</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_ch_map_req_ind
</UL>

<P><STRONG><a name="[48]"></a>lld_evt_move_to_master</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>lld_evt_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[13e]"></a>lld_evt_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[13d]"></a>lld_evt_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[127]"></a>lld_sleep_us_2_lpcycles_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_us_2_lpcycles_sel_func
</UL>

<P><STRONG><a name="[124]"></a>lld_sleep_lpcycles_2_us_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_compensate_func
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_sel_func
</UL>

<P><STRONG><a name="[138]"></a>lld_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>llm_wl_from_rl_restore</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[4c]"></a>llm_con_req_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>llm_adv_report_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>llm_le_adv_report_ind_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[83]"></a>llm_encryption_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[114]"></a>llm_p256_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_llm_p256_start_func
</UL>

<P><STRONG><a name="[105]"></a>llm_wlpub_addr_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[106]"></a>llm_wlpriv_addr_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[9b]"></a>hci_rd_local_supp_feats_cmd_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[104]"></a>llm_util_bd_addr_in_wl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[118]"></a>llm_util_set_public_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_bd_addr_cmd_handler
</UL>

<P><STRONG><a name="[d8]"></a>llm_util_check_evt_mask</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
</UL>

<P><STRONG><a name="[107]"></a>llm_util_bl_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[108]"></a>llm_util_bl_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[101]"></a>llm_util_rl_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[102]"></a>llm_util_rl_peer_find</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[103]"></a>llm_util_rl_peer_resolv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
</UL>

<P><STRONG><a name="[cd]"></a>ea_time_get_halfslot_rounded</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_evt_move_to_master
</UL>

<P><STRONG><a name="[cb]"></a>ea_interval_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_evt_move_to_master
</UL>

<P><STRONG><a name="[d0]"></a>ea_interval_insert</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_evt_move_to_master
</UL>

<P><STRONG><a name="[13c]"></a>ea_finetimer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[13f]"></a>ea_sw_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[12f]"></a>ea_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>uart_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[6c]"></a>uart_flow_on_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[6d]"></a>uart_flow_off_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[6e]"></a>uart_finish_transfers_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[6f]"></a>uart_read_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[70]"></a>uart_write_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[71]"></a>UART_Handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[b2]"></a>modulationGainCalibration_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[b3]"></a>DCoffsetCalibration_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[b4]"></a>PllLF_IFF_MIX_CapCalibration_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[72]"></a>gtl_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[134]"></a>gtl_enter_sleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>gtl_eif_read_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[75]"></a>gtl_eif_read_hdr_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[76]"></a>gtl_eif_read_payl_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[77]"></a>gtl_eif_tx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[78]"></a>gtl_eif_rx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[73]"></a>gtl_eif_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[da]"></a>hci_send_2_host</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_platform_reset_complete_func
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_commands_vs2_handler
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_commands_vs1_handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_commands_vs1_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_tx_pw_cmd_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_reset_tx_cnt_cmd_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_reset_rx_cnt_cmd_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_llcp_discard_cmd_handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_crc_cmd_handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_bd_addr_cmd_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_hw_reg_wr_cmd_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_hw_reg_rd_cmd_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_plf_reset_cmd_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rf_reg_wr_cmd_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rf_reg_rd_cmd_handler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_mem_info_cmd_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_ke_stats_cmd_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_par_cmd_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_par_cmd_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_flash_cmd_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_flash_cmd_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_er_flash_cmd_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_id_flash_cmd_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_del_par_cmd_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_mem_cmd_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_mem_cmd_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_dle_dft_value_cmd_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_rl_size_cmd_handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_filt_dup_size_cmd_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_command_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
</UL>

<P><STRONG><a name="[7a]"></a>h4tl_read_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[7b]"></a>h4tl_read_hdr_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[7c]"></a>h4tl_read_payl_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[7d]"></a>h4tl_read_next_out_of_sync_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[7e]"></a>h4tl_out_of_sync_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[7f]"></a>h4tl_tx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[80]"></a>h4tl_rx_done_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[79]"></a>h4tl_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[133]"></a>h4tl_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>attc_l2cc_pdu_recv_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[41]"></a>atts_mtu_exc_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>atts_l2cc_pdu_recv_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[bc]"></a>atts_allocate_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_atts_mtu_exc_req
</UL>

<P><STRONG><a name="[be]"></a>atts_send_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_atts_mtu_exc_req
</UL>

<P><STRONG><a name="[bf]"></a>gattc_set_mtu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_atts_mtu_exc_req
</UL>

<P><STRONG><a name="[bd]"></a>gattm_get_max_mtu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_atts_mtu_exc_req
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[44]"></a>smpc_check_key_distrib</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>smpc_generate_e1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[fa]"></a>smpc_pairing_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_dhkey_calc_start
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[f9]"></a>smpc_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_dhkey_calc_start
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[43]"></a>smpc_is_sec_mode_reached</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>smpc_pdu_recv_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[f5]"></a>smpc_generate_f4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[fb]"></a>smpc_generate_g2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[fc]"></a>smpc_generate_f5</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[f7]"></a>gapc_get_role</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_dhkey_calc_start
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[e6]"></a>gapc_search_lecb_channel</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[ef]"></a>gapc_lecnx_check_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_unpack_func
</UL>

<P><STRONG><a name="[f0]"></a>l2cc_pdu_recv_ind_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_recv_ind_handler_func
</UL>

<P><STRONG><a name="[a1]"></a>gapc_lecb_connect_cfm_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[df]"></a>gapm_send_error_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[4a]"></a>gapm_adv_sanity</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>gapm_basic_hci_cmd_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[46]"></a>gapm_get_ad_type_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>gapm_get_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_construct_id_addr_info_pdu
</UL>

<P><STRONG><a name="[9c]"></a>l2cc_pdu_pack_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[e5]"></a>l2cc_detect_dest</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[9f]"></a>l2c_process_sdu_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[9e]"></a>l2c_send_lecb_message_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[91]"></a>smpc_check_param_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[45]"></a>smpc_construct_id_addr_info_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>smpc_recv_pair_rand_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>smpc_recv_public_key_exchange_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>smpc_public_key_exchange_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[42]"></a>smpc_dhkey_calc_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>smpc_dhkey_calc_ind_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[b7]"></a>smpm_ecdh_key_create_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[131]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[115]"></a>ke_stats_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_ke_stats_cmd_handler
</UL>

<P><STRONG><a name="[e7]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[e8]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[117]"></a>ke_get_mem_usage</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_mem_info_cmd_handler
</UL>

<P><STRONG><a name="[116]"></a>ke_get_max_mem_usage</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_mem_info_cmd_handler
</UL>

<P><STRONG><a name="[d4]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_create_p256_key_func
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_platform_reset_complete_func
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_commands_vs2_handler
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_commands_vs1_handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dialog_commands_vs1_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_tx_pw_cmd_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_reset_tx_cnt_cmd_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_reset_rx_cnt_cmd_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_llcp_discard_cmd_handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_crc_cmd_handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_bd_addr_cmd_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_hw_reg_wr_cmd_handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_hw_reg_rd_cmd_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_plf_reset_cmd_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rf_reg_wr_cmd_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rf_reg_rd_cmd_handler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_mem_info_cmd_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_ke_stats_cmd_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_par_cmd_handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_par_cmd_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_flash_cmd_handler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_flash_cmd_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_er_flash_cmd_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_id_flash_cmd_handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_del_par_cmd_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_mem_cmd_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_mem_cmd_handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_dle_dft_value_cmd_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_rl_size_cmd_handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_wr_filt_dup_size_cmd_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_dhkey_calc_start
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_command_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[d7]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_create_p256_key_func
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_dhkey_calc_start
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[ec]"></a>ke_msg_forward</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[dd]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_rd_mem_info_cmd_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[81]"></a>ke_task_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[113]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_init_func
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init_func
</UL>

<P><STRONG><a name="[c5]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_init_func
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_tx_pw_cmd_handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_dbg_set_crc_cmd_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_ch_map_req_ind
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
</UL>

<P><STRONG><a name="[c0]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_recv_ind_handler_func
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_gtl_state
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_req_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_data_ind_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[13b]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init_func
</UL>

<P><STRONG><a name="[82]"></a>ke_timer_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[c4]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llcp_length_rsp_handler
</UL>

<P><STRONG><a name="[132]"></a>ke_timer_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0]"></a>rwble_hl_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[12e]"></a>rwip_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[db]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
</UL>

<P><STRONG><a name="[142]"></a>rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[147]"></a>rwip_wakeup_delay_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
</UL>

<P><STRONG><a name="[d1]"></a>uECC_secp256r1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PK_PointMult_func
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_dhkey_calc_start
</UL>

<P><STRONG><a name="[d2]"></a>uECC_valid_public_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PK_PointMult_func
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_dhkey_calc_start
</UL>

<P><STRONG><a name="[d3]"></a>uECC_point_mult</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PK_PointMult_func
</UL>

<P><STRONG><a name="[125]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_compensate_func
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_lld_evt_move_to_master
</UL>

<P><STRONG><a name="[c7]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_llm_p256_start_func
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JT_l2cc_pdu_unpack_func
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_req_handler_func
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_rand_func
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get_func
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llc_ch_map_req_ind
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_command_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_adv_report_set
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_construct_id_addr_info_pdu
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_func
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[129]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f6]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get_func
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_con_req_ind
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_public_key_exchange_pdu
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[c9]"></a>__ARM_common_switch8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, da14585_symbols.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_gapm_adv_sanity
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_llm_adv_report_set
</UL>

<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[148]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[ba]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[11c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[149]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[14a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[14b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[14c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[14d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BLE_RF_DIAG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_RF_DIAG_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_RF_DIAG_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>I2C_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEYBRD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PCM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RESERVED21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RESERVED22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RESERVED23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RFCAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SRCIN_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SRCOUT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SWTIM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PATCHED_atts_mtu_exc_req</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PATCHED_atts_mtu_exc_req
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_get_max_mtu
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_mtu
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_pdu
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_allocate_pdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>PATCHED_smpc_is_sec_mode_reached</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, patch.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>PATCHED_smpc_check_key_distrib</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PATCHED_smpc_check_key_distrib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>PATCHED_llcp_length_req_handler</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_llcp_length_req_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_dicon_procedure
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_length_ind
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_length_rsp_pdu_send
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>PATCHED_llcp_length_rsp_handler</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PATCHED_llcp_length_rsp_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_dicon_procedure
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_length_ind
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>JT_llc_le_length_effective_func</STRONG> (Thumb, 182 bytes, Stack size 20 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = JT_llc_le_length_effective_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[37]"></a>PATCHED_smpc_construct_id_addr_info_pdu</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PATCHED_smpc_construct_id_addr_info_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_bdaddr
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>PATCHED_llc_util_gen_skdx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PATCHED_llc_util_gen_skdx
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>PATCHED_llm_adv_report_set</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_llm_adv_report_set
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_rx_buffer_get
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>PATCHED_lld_evt_move_to_master</STRONG> (Thumb, 360 bytes, Stack size 80 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PATCHED_lld_evt_move_to_master
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_interval_insert
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_interval_create
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_time_get_halfslot_rounded
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_elt_delete
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_channel_next
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>PATCHED_gapm_adv_sanity</STRONG> (Thumb, 244 bytes, Stack size 112 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PATCHED_gapm_adv_sanity
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>PATCHED_gapm_get_ad_type_flag</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PATCHED_gapm_get_ad_type_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>PK_PointMult_func</STRONG> (Thumb, 246 bytes, Stack size 184 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PK_PointMult_func
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_point_mult
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_valid_public_key
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_secp256r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[a8]"></a>llm_create_p256_key_func</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = llm_create_p256_key_func
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ba431_get_rand
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PK_PointMult
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[a9]"></a>llm_p256_req_handler_func</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llm_p256_req_handler_func
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_check_evt_mask
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_create_p256_key
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_start
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[31]"></a>PATCHED_hci_command_handler</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PATCHED_hci_command_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>JT_l2cc_pdu_unpack_func</STRONG> (Thumb, 812 bytes, Stack size 80 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = JT_l2cc_pdu_unpack_func
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_lecnx_check_rx
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[a0]"></a>JT_l2cc_pdu_recv_ind_handler_func</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = JT_l2cc_pdu_recv_ind_handler_func
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_func
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_recv
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[3d]"></a>PATCHED_llc_ch_map_req_ind</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PATCHED_llc_ch_map_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_schedule_next
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_ind
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_map_update_ind
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>PATCHED_smpc_recv_public_key_exchange_pdu</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_smpc_recv_public_key_exchange_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_dhkey_calc_start
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>PATCHED_llm_con_req_ind</STRONG> (Thumb, 624 bytes, Stack size 80 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PATCHED_llm_con_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_rl_peer_resolv
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_rl_peer_find
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_rl_check
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_bl_add
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_bl_check
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_bd_addr_in_wl
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_wl_from_rl_restore
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_move_to_slave
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_update_channel_map
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_get_free_conhdl
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_start
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_rx_buffer_get
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_wlpriv_addr_set
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_wlpub_addr_set
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>patch_func</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = patch_func
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[12a]"></a>patch_global_vars_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, patch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10f]"></a>rf_calibration_585</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, rf_calibration.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_calibration_585
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllLF_IFF_MIX_CapCalibration
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCoffsetCalibration
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulationGainCalibration
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[14e]"></a>enable_rf_diag_irq</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, rf_calibration.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>set_gauss_modgain</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, rf_calibration.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>dbg_init_func</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dbg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dbg_init_func
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[9a]"></a>dbg_platform_reset_complete_func</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dbg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dbg_platform_reset_complete_func
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[34]"></a>PATCHED_smpc_dhkey_calc_start</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, smpc_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_smpc_dhkey_calc_start
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_valid_public_key
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uECC_secp256r1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>JT_llm_p256_start_func</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, smpc_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = JT_llm_p256_start_func
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_p256_start_func
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[bb]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[150]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>ADC_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.ADC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BLE_WAKEUP_LP_Handler</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, lto-llvm-bffcfd.o(.text.BLE_WAKEUP_LP_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BLE_WAKEUP_LP_Handler &rArr; periph_init &rArr; patch_func
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_regs_pop
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIO0_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.GPIO0_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO0_Handler &rArr; GPIOn_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIO1_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.GPIO1_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO1_Handler &rArr; GPIOn_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO2_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.GPIO2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO2_Handler &rArr; GPIOn_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIO3_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.GPIO3_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO3_Handler &rArr; GPIOn_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIO4_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.GPIO4_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO4_Handler &rArr; GPIOn_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>HardFault_HandlerC</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.HardFault_HandlerC))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>NMI_HandlerC</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.NMI_HandlerC))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[9]"></a>UART2_Handler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.UART2_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WKUP_QUADEC_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.WKUP_QUADEC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[11b]"></a>hci_vs_handle_rest_commands</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lto-llvm-bffcfd.o(.text.hci_vs_handle_rest_commands))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_vs_handle_rest_commands
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_command_handler
</UL>

<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 2776 bytes, Stack size 112 bytes, lto-llvm-bffcfd.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = main &rArr; periph_init &rArr; patch_func
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_sleep_check
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_enter
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtl_enter_sleep
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_regs_push
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_stop
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtl_eif_init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PllLF_IFF_MIX_CapCalibration
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCoffsetCalibration
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_global_vars_init
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_indication (Weak Reference)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_585
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_srand
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sleep_check
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_gtl_state
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rc16m_count
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_init_func
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_regs
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7]"></a>rwble_isr</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, lto-llvm-bffcfd.o(.text.rwble_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rwble_isr &rArr; adc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_get
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_finetimer_isr
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gtl_eif_init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_rx_isr
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_crypt_isr
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_timer_isr
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_end_isr
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h4tl_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sw_isr
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_usDelay
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_sample
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[151]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[152]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[153]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(system_DA14xxx))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>PATCHED_gapm_reset_cmd_handler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PATCHED_gapm_reset_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpm_ecdh_key_create
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_basic_hci_cmd_send
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_error_evt
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>l2cc_handle_invalid_pdu</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = l2cc_handle_invalid_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_detect_dest
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_search_lecb_channel
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PATCHED_hci_acl_data_rx_handler
</UL>

<P><STRONG><a name="[2e]"></a>PATCHED_hci_acl_data_rx_handler</STRONG> (Thumb, 620 bytes, Stack size 64 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = PATCHED_hci_acl_data_rx_handler &rArr; l2cc_handle_invalid_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_forward
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_detect_dest
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_search_lecb_channel
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_get_max_mtu
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_rx_buffer_get
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_rx_free
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_process_sdu
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_send_lecb_message
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_unpack
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_handle_invalid_pdu
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>PATCHED_smpc_recv_pair_rand_pdu</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PATCHED_smpc_recv_pair_rand_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_f5
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_g2
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_f4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>PATCHED_llc_data_ind_handler</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PATCHED_llc_data_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_get_mode
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_dicon_procedure
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_common_enc_change_evt_send
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_common_enc_key_ref_comp_evt_send
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_buf_rx_free
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> patch.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>hci_dbg_wr_filt_dup_size_cmd_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_wr_filt_dup_size_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>hci_dbg_wr_rl_size_cmd_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_wr_rl_size_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>hci_dbg_wr_dle_dft_value_cmd_handler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_wr_dle_dft_value_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>hci_dbg_rd_mem_cmd_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_rd_mem_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>hci_dbg_wr_mem_cmd_handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_wr_mem_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>hci_dbg_del_par_cmd_handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_del_par_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>hci_dbg_id_flash_cmd_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_id_flash_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>hci_dbg_er_flash_cmd_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_er_flash_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>hci_dbg_wr_flash_cmd_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_wr_flash_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>hci_dbg_rd_flash_cmd_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_rd_flash_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>hci_dbg_rd_par_cmd_handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_rd_par_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>hci_dbg_wr_par_cmd_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_wr_par_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>hci_dbg_rd_ke_stats_cmd_handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_rd_ke_stats_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_stats_get
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>hci_dbg_rd_mem_info_cmd_handler</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_dbg_rd_mem_info_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_get_max_mem_usage
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_get_mem_usage
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>hci_dbg_rf_reg_rd_cmd_handler</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_dbg_rf_reg_rd_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>hci_dbg_rf_reg_wr_cmd_handler</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_dbg_rf_reg_wr_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>hci_dbg_plf_reset_cmd_handler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_dbg_plf_reset_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>hci_dbg_hw_reg_rd_cmd_handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_hw_reg_rd_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>hci_dbg_hw_reg_wr_cmd_handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_hw_reg_wr_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>hci_dbg_set_bd_addr_cmd_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_set_bd_addr_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_util_set_public_addr
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>hci_dbg_set_crc_cmd_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_dbg_set_crc_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[60]"></a>hci_dbg_llcp_discard_cmd_handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_dbg_llcp_discard_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_util_set_llcp_discard_enable
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>hci_dbg_reset_rx_cnt_cmd_handler</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_dbg_reset_rx_cnt_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>hci_dbg_reset_tx_cnt_cmd_handler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_dbg_reset_tx_cnt_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>hci_dbg_set_tx_pw_cmd_handler</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_dbg_set_tx_pw_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_conhdl2elt
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>hci_command_handler</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, dbg_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_command_handler &rArr; hci_vs_handle_rest_commands
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_vs_handle_rest_commands
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dbg_task.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>nvds_get_func</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lto-llvm-bffcfd.o(.text.nvds_get_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvds_get_func
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[87]"></a>nvds_init_func</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.nvds_init_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[86]"></a>nvds_del_func</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.nvds_del_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[85]"></a>nvds_put_func</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.nvds_put_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[11d]"></a>periph_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lto-llvm-bffcfd.o(.text.periph_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = periph_init &rArr; patch_func
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_func
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_WAKEUP_LP_Handler
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12d]"></a>rf_regs</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_regs))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_reinit_func
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[8b]"></a>lld_sleep_init_func</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.lld_sleep_init_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_sleep_init_func &rArr; set_sleep_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[130]"></a>get_rc16m_count</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-bffcfd.o(.text.get_rc16m_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_rc16m_count
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_func
</UL>

<P><STRONG><a name="[123]"></a>check_gtl_state</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.check_gtl_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = check_gtl_state
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[126]"></a>set_sleep_delay</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.set_sleep_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_sleep_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_delay_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_init_func
</UL>

<P><STRONG><a name="[89]"></a>platform_reset_func</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.platform_reset_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[a4]"></a>crypto_init_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.crypto_init_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[af]"></a>dia_rand_func</STRONG> (Thumb, 236 bytes, Stack size 96 bytes, lto-llvm-bffcfd.o(.text.dia_rand_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dia_rand_func
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[b0]"></a>dia_srand_func</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.dia_srand_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[b1]"></a>ba431_get_rand_func</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lto-llvm-bffcfd.o(.text.ba431_get_rand_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ba431_get_rand_func
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dia_rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[8c]"></a>lld_sleep_us_2_lpcycles_sel_func</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.lld_sleep_us_2_lpcycles_sel_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lld_sleep_us_2_lpcycles_sel_func
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_us_2_lpcycles_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[8d]"></a>lld_sleep_lpcycles_2_us_sel_func</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.lld_sleep_lpcycles_2_us_sel_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lld_sleep_lpcycles_2_us_sel_func
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[24]"></a>GPIO_ConfigurePin</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lto-llvm-bffcfd.o(.text.GPIO_ConfigurePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_ConfigurePin
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.periph_init)
</UL>
<P><STRONG><a name="[11f]"></a>GPIOn_Handler</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, lto-llvm-bffcfd.o(.text.GPIOn_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIOn_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_Handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Handler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Handler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Handler
</UL>

<P><STRONG><a name="[145]"></a>adc_init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = adc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[146]"></a>adc_get_sample</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.adc_get_sample))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[122]"></a>adc_usDelay</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.adc_usDelay))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_usDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_usDelay
</UL>

<P><STRONG><a name="[121]"></a>uart_rx_isr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.uart_rx_isr))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>

<P><STRONG><a name="[69]"></a>rf_init_func</STRONG> (Thumb, 120 bytes, Stack size 64 bytes, lto-llvm-bffcfd.o(.text.rf_init_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rf_init_func &rArr; rf_calibration_585
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_585
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rc16m_count
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_regs
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[25]"></a>rf_reg_wr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_reg_wr))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[26]"></a>rf_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_reg_rd))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[27]"></a>rf_sleep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_sleep))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[28]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_txpwr_dbm_get))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[29]"></a>RADIOCNTL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.RADIOCNTL_Handler))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[2a]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_reset))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[2b]"></a>rf_rssi_convert</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_rssi_convert))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[2c]"></a>rf_force_agc_enable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.rf_force_agc_enable))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.rf_init_func)
</UL>
<P><STRONG><a name="[6a]"></a>rf_reinit_func</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.rf_reinit_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_reinit_func
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_regs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[8a]"></a>lld_sleep_compensate_func</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lto-llvm-bffcfd.o(.text.lld_sleep_compensate_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_sleep_compensate_func
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_lpcycles_2_us_func
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[93]"></a>prf_init_func</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lto-llvm-bffcfd.o(.text.prf_init_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prf_init_func
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[94]"></a>prf_add_profile_func</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.prf_add_profile_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[95]"></a>prf_create_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.prf_create_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[96]"></a>prf_cleanup_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-bffcfd.o(.text.prf_cleanup_func))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[97]"></a>prf_get_id_from_task_func</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lto-llvm-bffcfd.o(.text.prf_get_id_from_task_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prf_get_id_from_task_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[98]"></a>prf_get_task_from_id_func</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lto-llvm-bffcfd.o(.text.prf_get_task_from_id_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prf_get_task_from_id_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.rom_func_addr_table_var)
</UL>
<P><STRONG><a name="[23]"></a>dialog_commands_vs1_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.dialog_commands_vs1_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dialog_commands_vs1_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.text.hci_vs_handle_rest_commands)
</UL>
<P><STRONG><a name="[b8]"></a>user_commands_vs1_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.user_commands_vs1_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = user_commands_vs1_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.user_commands_handler_tab)
</UL>
<P><STRONG><a name="[b9]"></a>user_commands_vs2_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-bffcfd.o(.text.user_commands_vs2_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = user_commands_vs2_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_host
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-bffcfd.o(.rodata.user_commands_handler_tab)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[128]"></a>reset_indication</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<HR></body></html>
